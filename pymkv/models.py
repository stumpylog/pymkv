# generated by datamodel-codegen:
#   filename:  https://mkvtoolnix.download/doc/mkvmerge-identification-output-schema-v20.json
#   timestamp: 2025-09-26T17:23:27+00:00

from __future__ import annotations

import sys
from typing import Literal
from typing import TypedDict

if sys.version_info >= (3, 11):  # pragma: no cover
    from typing import NotRequired
else:  # pragma: no cover
    from typing_extensions import NotRequired


class Properties(TypedDict):
    uid: NotRequired[int]


class Attachment(TypedDict):
    content_type: NotRequired[str]
    description: NotRequired[str]
    file_name: str
    id: int
    size: int
    properties: Properties
    type: NotRequired[str]


class Chapter(TypedDict):
    num_entries: int


class Program(TypedDict):
    """
    Properties describing a single program
    """

    program_number: NotRequired[int]
    service_name: NotRequired[str]
    service_provider: NotRequired[str]


class Properties1(TypedDict):
    """
    additional properties for the container varying by container format
    """

    container_type: NotRequired[int]
    date_local: NotRequired[str]
    date_utc: NotRequired[str]
    duration: NotRequired[int]
    is_providing_timestamps: NotRequired[bool]
    muxing_application: NotRequired[str]
    next_segment_uid: NotRequired[str]
    other_file: NotRequired[list[str]]
    playlist: NotRequired[bool]
    playlist_chapters: NotRequired[int]
    playlist_duration: NotRequired[int]
    playlist_file: NotRequired[list[str]]
    playlist_size: NotRequired[int]
    previous_segment_uid: NotRequired[str]
    programs: NotRequired[list[Program]]
    segment_uid: NotRequired[str]
    timestamp_scale: NotRequired[int]
    title: NotRequired[str]
    writing_application: NotRequired[str]


class Container(TypedDict):
    """
    information about the identified container
    """

    properties: NotRequired[Properties1]
    recognized: bool
    supported: bool
    type: NotRequired[str]


class GlobalTag(TypedDict):
    num_entries: int


class TrackTag(TypedDict):
    num_entries: int
    track_id: int


class Properties2(TypedDict):
    aac_is_sbr: NotRequired[Literal["true", "false", "unknown"]]
    alpha_mode: NotRequired[int]
    audio_bits_per_sample: NotRequired[int]
    audio_channels: NotRequired[int]
    audio_emphasis: NotRequired[int]
    audio_sampling_frequency: NotRequired[int]
    cb_subsample: NotRequired[str]
    chroma_siting: NotRequired[str]
    chroma_subsample: NotRequired[str]
    chromaticity_coordinates: NotRequired[str]
    codec_delay: NotRequired[int]
    codec_id: NotRequired[str]
    codec_name: NotRequired[str]
    codec_private_data: NotRequired[str]
    codec_private_length: NotRequired[int]
    content_encoding_algorithms: NotRequired[str]
    color_bits_per_channel: NotRequired[int]
    color_matrix_coefficients: NotRequired[int]
    color_primaries: NotRequired[int]
    color_range: NotRequired[int]
    color_transfer_characteristics: NotRequired[int]
    default_duration: NotRequired[int]
    default_track: NotRequired[bool]
    display_dimensions: NotRequired[str]
    display_unit: NotRequired[int]
    enabled_track: NotRequired[bool]
    encoding: NotRequired[str]
    forced_track: NotRequired[bool]
    flag_hearing_impaired: NotRequired[bool]
    flag_visual_impaired: NotRequired[bool]
    flag_text_descriptions: NotRequired[bool]
    flag_original: NotRequired[bool]
    flag_commentary: NotRequired[bool]
    language: NotRequired[str]
    language_ietf: NotRequired[str]
    max_content_light: NotRequired[int]
    max_frame_light: NotRequired[int]
    max_luminance: NotRequired[float]
    min_luminance: NotRequired[float]
    minimum_timestamp: NotRequired[int]
    multiplexed_tracks: NotRequired[list[int]]
    number: NotRequired[int]
    num_index_entries: NotRequired[int]
    packetizer: NotRequired[str]
    pixel_dimensions: NotRequired[str]
    program_number: NotRequired[int]
    projection_pose_pitch: NotRequired[float]
    projection_pose_roll: NotRequired[float]
    projection_pose_yaw: NotRequired[float]
    projection_private: NotRequired[str]
    projection_type: NotRequired[int]
    stereo_mode: NotRequired[int]
    stream_id: NotRequired[int]
    sub_stream_id: NotRequired[int]
    teletext_page: NotRequired[int]
    text_subtitles: NotRequired[bool]
    track_name: NotRequired[str]
    uid: NotRequired[int]
    white_color_coordinates: NotRequired[str]


class Track(TypedDict):
    codec: str
    id: int
    type: str
    properties: NotRequired[Properties2]


class MkvmergeIdentificationOutput(TypedDict):
    """
    The JSON output produced by mkvmerge's file identification mode
    """

    attachments: NotRequired[list[Attachment]]
    chapters: NotRequired[list[Chapter]]
    container: NotRequired[Container]
    errors: NotRequired[list[str]]
    file_name: NotRequired[str]
    global_tags: NotRequired[list[GlobalTag]]
    identification_format_version: NotRequired[int]
    track_tags: NotRequired[list[TrackTag]]
    tracks: NotRequired[list[Track]]
    warnings: NotRequired[list[str]]
